{"version":3,"sources":["app/components/services/quotes.js","app/components/QuoteMachine.jsx","app/components/services/roverPhotos.js","app/components/NASARover.jsx","app/components/HomePage.jsx","index.jsx","app/components/App.jsx"],"names":["a","fetch","response","json","quotes","QuoteMachine","props","state","tweets","getRandomQuote","bind","handleClick","this","getQuotes","length","q","setState","Math","floor","random","quote","author","id","className","onClick","href","rel","target","Component","photos","NASARover","imgs","getImages","getPhotos","map","obj","index","alt","img_src","src","key","HomePage","ReactDOM","render","to","path","document","getElementById"],"mappings":"ySAAA,G,MAAA,sBAAe,8BAAAA,EAAA,sEACUC,MAAM,0IADhB,cACPC,EADO,gBAEMA,EAASC,OAFf,cAEPA,EAFO,yBAGNA,EAAKC,QAHC,4CCIFC,EAAY,YACvB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,OAAQ,IAEV,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBANF,EADI,iFAWrBE,KAAKC,cAXgB,sJAejBD,KAAKL,MAAMC,SAAUI,KAAKL,MAAMC,OAAOM,OAftB,iEAkBHV,IAlBG,OAkBbW,EAlBa,OAmBnBH,KAAKI,SAAS,CACZR,OAAQO,IApBS,6IAmCN,IAGPP,EAAWI,KAAKL,MAAhBC,OAER,OAAOA,EAAOS,KAAKC,MAAMD,KAAKE,SAAWX,EAAOM,WAxC3B,oCA4CrBF,KAAKH,iBACLG,KAAKI,SAAS,MA7CO,+BAkDrB,IAAMI,EAAQR,KAAKH,kBAAoB,CACrCW,MAAO,eACPC,OAAQ,IAGV,OAEE,6BACE,yBAAKC,GAAG,YAAYC,UAAU,sCAC5B,uBAAGD,GAAG,QAAQF,EAAMA,OACpB,uBAAGE,GAAG,UAAUF,EAAMC,QACtB,4BAAQE,UAAU,sBAAsBD,GAAG,YAAYE,QAASZ,KAAKD,aAArE,cAEA,4BAAQY,UAAU,wBAChB,uBAAGD,GAAG,cAAcG,KAAK,mCAAmCC,IAAI,sBAAsBC,OAAO,UAA7F,oBAhEa,GAA8BC,aCJvD,wBAAe,8BAAA5B,EAAA,sEACUC,MAAM,kJADhB,cACPC,EADO,gBAEMA,EAASC,OAFf,cAEPA,EAFO,yBAGNA,EAAK0B,QAHC,2CCGFC,EAAS,YACpB,WAAYxB,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXwB,KAAM,IAHS,EADC,iFASlBnB,KAAKoB,cATa,kKAeCC,IAfD,OAeZF,EAfY,OAgBlBnB,KAAKI,SAAS,CACZe,KAAMA,IAjBU,qIAwBlB,OACE,6BACE,wBAAIT,GAAG,UAAUC,UAAU,gBAA3B,oBACA,yBAAKD,GAAG,gBACLV,KAAKL,MAAMwB,KAAKG,KAAI,SAACC,EAAKC,GAAN,OACnB,yBAAKC,IAAKF,EAAIG,QAASf,UAAU,yBAAyBgB,IAAKJ,EAAIG,QAASE,IAAKJ,aA7BvE,GAA2BR,aCDpCa,EAAW,WACtB,OACE,6BACE,wBAAIlB,UAAU,eAAd,gB,qBCANmB,IAASC,OAAO,mBCMG,WAEjB,OAEE,kBAAC,IAAD,KACE,6BAEE,yBAAKpB,UAAU,2DACb,wBAAIA,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWqB,GAAG,KAA9B,gBAEF,wBAAIrB,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWqB,GAAG,WAA9B,eAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,WACV,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,YD9BI,MAASC,SAASC,eAAe,W","file":"static/js/main.cfb090c5.chunk.js","sourcesContent":["export default async () => {\n  const response = await fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\n  const json = await response.json();\n  return json.quotes;\n}\n//api call to freecodecamp for quotes","import React, { Component } from \"react\";\nimport \"../css/App.css\";\nimport quotes from './services/quotes'\n\nexport const QuoteMachine = class QuoteMachine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n    }\n    this.getRandomQuote = this.getRandomQuote.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.getQuotes();\n  }\n\n  async getQuotes() {\n    if (this.state.tweets && this.state.tweets.length) {\n      return;\n    } else {\n      const q = await quotes();\n      this.setState({\n        tweets: q\n      })\n    }\n  }\n\n  /*getWeather() {\n    fetch('https://api.weather.gov/gridpoints/TOP/31,80/forecast')\n      .then(response => response.json().properties.periods)\n      .then((myJson) => {\n        console.log(myJson);\n      })\n  }*/\n\n  //api_key=C9zeqODcfauPysuxbTCwTp80uxLdDsQZzu5XLBTd\n\n  getRandomQuote() {\n    //get quotes from state\n    // let tweets = this.state.tweets; \n    const { tweets } = this.state;\n    //get random quote\n    return tweets[Math.floor(Math.random() * tweets.length)];\n  }\n\n  handleClick() {\n    this.getRandomQuote();\n    this.setState({});\n  }\n\n  render() {\n\n    const quote = this.getRandomQuote() || {\n      quote: 'Searching...',\n      author: ''\n    };\n\n    return (\n\n      <div>\n        <div id='quote-box' className=\"mx-auto shadow-lg rounded p-3 mb-5\">\n          <p id=\"text\">{quote.quote}</p>\n          <p id=\"author\">{quote.author}</p>\n          <button className=\"btn btn-primary ml-\" id=\"new-quote\" onClick={this.handleClick}>\n            New quote?</button>\n          <button className=\"btn btn-primary ml-3\">\n            <a id=\"tweet-quote\" href=\"https://twitter.com/intent/tweet\" rel=\"noopener noreferrer\" target=\"_blank\">Tweet me!</a>\n          </button>\n        </div>\n      </div>\n\n    );\n  }\n}","export default async () => {\n  const response = await fetch('https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=1000&camera=NAVCAM&page=1&api_key=C9zeqODcfauPysuxbTCwTp80uxLdDsQZzu5XLBTd')\n  const json = await response.json();\n  return json.photos;\n}\n//simple api call to nasa then return the json.photos array","import React, { Component } from \"react\";\nimport getPhotos from './services/roverPhotos'\n\nexport const NASARover = class NASARover extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgs: []\n    }\n  }\n\n  componentDidMount() {\n    this.getImages();\n    //on mount get photos\n  }\n\n  async getImages() {\n    //getPhotos is abstracted away so it can be mocked with jest\n    const imgs = await getPhotos();\n    this.setState({\n      imgs: imgs\n    })\n  }\n\n\n  //mapping through imgs and displaying them in imgs tags\n  render() {\n    return (\n      <div>\n        <h1 id='roverH1' className='text-center '>Photos from mars</h1>\n        <div id='rover-photos'>\n          {this.state.imgs.map((obj, index) => (\n            <img alt={obj.img_src} className='imgs shadow-lg rounded' src={obj.img_src} key={index}></img>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}","import React from \"react\";\n\nexport const HomePage = function(){\n  return(\n    <div>\n      <h1 className='text-center'>Home page!</h1>\n    </div>\n  )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./app/components/App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./app/css/App.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));","import React from \"react\";\nimport { QuoteMachine } from \"./QuoteMachine\";\nimport { NASARover } from \"./NASARover\";\nimport { HomePage } from './HomePage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nexport const App = function App() {\n\n  return (\n\n    <Router>\n      <div>\n\n        <nav className='navbar navbar-expand-lg navbar-light bg-light fixed-top'>\n          <ul className='navbar-nav mr-auto'>\n            <li className='nav-item'>\n              <Link className='nav-link' to=\"/\"> Home Page </Link>\n            </li>\n            <li className='nav-item'>\n              <Link className='nav-link' to=\"/quotes\"> Quotes </Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route path=\"/quotes\">\n            <QuoteMachine />\n            <NASARover />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n\n      </div>\n\n    </Router>\n\n  );\n}\n\n\n\n"],"sourceRoot":""}